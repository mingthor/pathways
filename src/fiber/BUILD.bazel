# BUILD file for the Fiber ThreadPool project

# Define a C++ library for the core fiber and thread pool components.
cc_library(
    name = "fiber_lib",
    srcs = [
        "fiber.cc",
        "fiber_scheduler.cc",
        "fiber_sync.cc",
        "thread_pool.cc",
    ],
    hdrs = [
        "fiber_types.h",
        "fiber.h",
        "fiber_scheduler.h",
        "fiber_sync.h",
        "thread_pool.h",
    ],
    deps = [
        "@abseil-cpp//absl/base:core_headers",
        "@abseil-cpp//absl/functional:any_invocable",
        "@abseil-cpp//absl/log:log",
        "@abseil-cpp//absl/log:initialize",
        "@abseil-cpp//absl/synchronization",
        "@abseil-cpp//absl/time",
    ],
    copts = ["-std=c++17"], # Or c++14, c++20 depending on your compiler support and preference
    visibility = ["//visibility:public"],
)

# Define the unit test executable.
cc_test(
    name = "fiber_test",
    srcs = ["fiber_test.cc"],
    deps = [
        ":fiber_lib", # Link against our fiber library
        "@abseil-cpp//absl/log:log",
        "@abseil-cpp//absl/log:initialize",
        "@abseil-cpp//absl/time",
        "@googletest//:gtest_main", # For gtest framework and main function
        "@googletest//:gtest",      # For gtest assertions
    ],
    copts = ["-std=c++17"],
)


# Define the example_main executable.
cc_binary(
    name = "example_main",
    srcs = ["example_main.cc"],
    deps = [
        ":fiber_lib", # Link against our fiber library
        "@abseil-cpp//absl/log:log",
        "@abseil-cpp//absl/log:initialize",
        "@abseil-cpp//absl/time",
    ],
    copts = ["-std=c++17"],
)


# Define the producer_consumer_main executable.
cc_binary(
    name = "producer_consumer_main",
    srcs = ["producer_consumer_main.cc"],
    deps = [
        "@abseil-cpp//absl/log:log",
        "@abseil-cpp//absl/log:initialize",
        "@abseil-cpp//absl/time",
        "@abseil-cpp//absl/synchronization",
    ],
    copts = ["-std=c++17"],
)

# Define a new test for context switching
cc_test(
    name = "context_switching_test",
    srcs = ["context_switching_test.cc"],
    deps = [
        "@abseil-cpp//absl/log:log",
        "@googletest//:gtest_main",
        "@googletest//:gtest",
    ],
    copts = ["-std=c++17"],
)

# Define a simple context test
cc_test(
    name = "simple_context_test",
    srcs = ["simple_context_test.cc"],
    deps = [
        "@abseil-cpp//absl/functional:any_invocable",
        "@abseil-cpp//absl/log:log",
        "@googletest//:gtest_main",
        "@googletest//:gtest",
    ],
    copts = ["-std=c++17"],
)
